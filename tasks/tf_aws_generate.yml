- name: ensure terraform folder exists
  file:
    state: directory
    path: "{{ iaas_tf_dir }}/aws/"
  tags: aws
- name: get current ipv4 client address
  shell: curl http://api.ipify.org # http://ifconfig.io
  register: myip
  when: iaas_tf_ipv4_admin is not defined
  tags: aws
- name: fill security groups with local public ipv4 ip
  set_fact:
    iaas_tf_ipv4_admin: "{{ iaas_tf_ipv4_admin|default([]) + [{ 'ip': myip.stdout, 'netmask': '32' }] }}"
  tags: aws
- debug: var=ansible_env
  tags: aws
- name: "generate configuration from template"
  template:
    src: "{{ item }}.j2"
    dest: "{{ iaas_tf_dir }}/aws/{{ item }}"
  with_items:
    - tf_aws_variables.tf
    - tf_aws_instances.tf
    - tf_aws_outputs.tf
    - tf_aws_ssh.tf
    - tf_aws_provider.tf
    - tf_aws_security_groups.tf
    - tf_aws_data.tf
    - tf_aws_iam.tf
  tags: aws
- name: perform terraform init for provider installation
  shell: cd "{{ iaas_tf_dir }}/aws/" && terraform init
  chdir: "{{ iaas_tf_dir }}/aws/"
  register: result
  tags: aws
